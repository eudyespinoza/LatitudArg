services:
  web:
    build: .
    expose:
      - "8001"
    healthcheck:
      test: ["CMD-SHELL", "python -c \"import urllib.request,sys;\nimport socket; socket.setdefaulttimeout(2);\n\ntry:\n  urllib.request.urlopen('http://127.0.0.1:8001/login');\n  sys.exit(0)\nexcept Exception as e:\n  sys.exit(1)\n\" "]
      interval: 10s
      timeout: 5s
      retries: 6
      start_period: 20s
    environment:
      - SECRET_KEY=${SECRET_KEY:-change-me}
      - DEBUG=${DEBUG:-0}
      - SQLITE_DB_PATH=/data/gps_monitoring.db
      - REDIS_URL=redis://redis:6379/1
      - MONGO_URI=mongodb://mongodb:27017/gps_monitoring
      - ALLOWED_HOSTS=localhost,127.0.0.1,latitudarg.com,latitudarg.com.ar,www.latitudarg.com,www.latitudarg.com.ar
    depends_on:
      redis:
        condition: service_healthy
      mongodb:
        condition: service_healthy
    volumes:
      - db-data:/data
      - static-data:/app/staticfiles
  redis:
    image: redis:7-alpine
    # No es necesario exponer a host; la app accede por red interna
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 5s
  mongodb:
    image: mongo:7
    volumes:
      - mongo-data:/data/db
    healthcheck:
      test: ["CMD-SHELL", "mongosh --quiet --eval \"db.adminCommand('ping').ok\" | grep 1 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
  nginx:
    image: nginx:1.25-alpine
    depends_on:
      web:
        condition: service_healthy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - static-data:/app/staticfiles:ro
      - /etc/ssl/latitudarg:/etc/ssl/latitudarg:ro


volumes:
  db-data:
  static-data:
  mongo-data:
